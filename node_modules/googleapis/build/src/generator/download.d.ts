export interface DownloadOptions {
    includePrivate?: boolean;
    discoveryUrl: string;
    downloadPath: string;
}
export declare const gfs: {
    rimraf: (dir: string) => Promise<void>;
    mkdir: (dir: string) => Promise<string | undefined>;
    writeFile: (path: string, obj: {}) => void;
};
/**
 * Download all discovery documents into the /discovery directory.
 * @param options
 */
export declare function downloadDiscoveryDocs(options: DownloadOptions): Promise<void>;
/**
 * Given an arbitrary object, recursively sort the properties on the object
 * by the name of the key.  For example:
 * {
 *   b: 1,
 *   a: 2
 * }
 * becomes....
 * {
 *   a: 2,
 *   b: 1
 * }
 * @param obj Object to be sorted
 * @returns object with sorted keys
 */
export declare function sortKeys(obj: {
    [index: string]: {};
}): {};
